获取数据信息

db.session.query()
db.session.query(Users) : 查询users表中所有的列
db.session.query(Users.id,Users.age) : 查询users表中id和age两个字段的值


语法:db.session.query(xxx).过滤器函数().执行函数()

过滤函数：
    1.filter(外，还有一个 session 对象。它允许你在不同请求间存储特定用户的信息。它是在 Cookies 的基)
        指定条件进行过滤 - where
        1.db.session.query(Users).filter(Users.id==1).first()
          select * from users where users.id=1
        2.db.session.query(Users).filter(Users.id>1,Users.age<50)
          select * from users where users.id>1 and users.age < 50
        3.
          from sqlalchemy import or_
          db.session.query(Users).filter(or_(Users.id>1,Users.age<50)
          select * from users where users.id>1 or users.age<50
        4.db.session.query(Users).filter(Users.email.like('wang%'))
          select * from users where users.email like 'wang%'
        5.db.session.query(Users).filter(Users.id.in_([1,3,5]))
          select * from users where users.id in [1,3,5]
        6.db.session.query(Users).filter(Users.age.between(30,50))
          select * from users where users.age between 30 and 50
    2.filter_by()
        特点:只做等值判断
        db.session.query(Users).filter_by(id=1)
        select * from users where id=1
    3.limit() / offset()
        offse外，还有一个 session 对象。它允许你在不同请求间存储特定用户的信息。它是在 Cookies 的基t() : 指定偏移量
        limit() : 获取限定数量的行数据

        db.session.query(Users).limit(5).offset(2)
        select * from users limit 2,5
    4.order_by()
        db.session.query(Users).order_by("age desc,id asc")
    5.group_by()
        作用:分组

        谨慎使用:
        db.session.query(Users).group_by("age")
        select * from users group by age

        推荐使用:
        db.session.query(Users.age).group_by("age")
        select users.age from users group by age
    6.聚合函数
        语法: 
          from sqlalchemy import func
          func.聚合函数(列名)

          聚合函数:
            avg(),sum(),max(),min(),count()
        用法:
          db.session.query(func.avg(Users.age)).first()
          db.session.query(func.avg(Users.age)).group_by('age').all()


    filter() / filter_by()  : where 子句
    group_by() : group by 子句
    order_by() : order by 子句  
    limit(n) / offset(m) : limit m,n

User.query.filter_by(mobile=mobile).first()
